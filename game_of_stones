#!/usr/bin/python3

import sys
from argparser import CustomArgumentParser
from graph import Graph, find_or_create
from bfs import bfs_distance, bfs_all_distances
from utils import read_file, get_list_pair_friend, get_list_pair_conspiracy
from conspiracies.execution import execute_links, execute_plots

def main():
    if len(sys.argv) != 5:
        raise ValueError("Invalid number of arguments")

    parser = CustomArgumentParser(
        usage='./game_of_stones [--links FR P1 P2 | --plots FR CR n]',
        description='Game of Stones command line tool'
    )
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('--links', nargs=3, metavar=('FR', 'P1', 'P2'),
                       help='FR: file containing friendship relations, P1: person one, P2: person two')
    group.add_argument('--plots', nargs=3, metavar=('FR', 'CR', 'n'),
                       help='FR: file with friendship relations, CR: file with conspiracies intentions, n: max friendship path length')
    args = parser.parse_args()

    graph = Graph()
    if args.links:
        fr, p1, p2 = args.links
        execute_links(graph, fr, p1, p2, read_file, get_list_pair_friend, find_or_create, bfs_distance)
    elif args.plots:
        fr, cr, n = args.plots
        if not n.isdigit() or int(n) <= 0:
            raise ValueError("n must be a positive number")
        execute_plots(graph, fr, cr, int(n), read_file, get_list_pair_friend, get_list_pair_conspiracy, find_or_create, bfs_all_distances)

if __name__ == '__main__':
    try:
        main()
        sys.exit(0)
    except Exception as e:
        print(f"An error occurred: {e}", file=sys.stderr)
        sys.exit(84)
